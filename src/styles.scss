/* You can add global styles to this file, and also import other style files */
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
@import "app/styles/mixins";
@import "app/styles/props";
@import "app/components/button/button.directive";
@import "app/components/flat-button/flat-button.directive";
@import "app/components/stroke-button/stroke-button.directive";
@import "app/components/inline-button/inline-button.directive";

* {
  margin: 0;
  padding: 0;
  font-family: 'Roboto', sans-serif;

  &:focus {
    outline: 0;
  }

  ::-webkit-scrollbar {
    @include box(8px);
  }

  ::-webkit-scrollbar-track {
    background-color: $azure;
    border-radius: 6px;
  }

  ::-webkit-scrollbar-thumb {
    background-color: $light-grey;
    border-radius: 6px;
  }
}

html, body {
  @include fullScreen;
  @include topLeft;
  position: absolute;
  overflow: auto;
}

body {
  &.cm-grabbing {
    cursor: grabbing;
  }
}

input {
  border: 0;
  outline: 0;

  &::-ms-clear,
  &::-ms-reveal {
    display: none;
  }
}

button {
  background-color: transparent;
  outline: 0;
  border: 0;
  cursor: pointer;
  user-select: none;
  word-break: keep-all;
}

a {
  text-decoration: none;
  color: inherit;
}

// input class
.cm-input {
  @include border(1px solid rgba($black, .3));
  @include padding(0 10px);
  height: 34px;
  border-radius: 4px;
  font-size: 14px;
  color: $black;
  transition: border-color .15s;
  background-color: $white;

  // placeholder
  &::placeholder {
    opacity: 1;
    color: rgba($black, .5);
  }

  &:focus {
    @include border(1px solid $black);
  }

  // error
  &.cm-error, &.ng-invalid.ng-touched, &.ng-invalid.ng-dirty {
    @include border(1px solid $red-orange);
    color: $red-orange;
  }

  // disabled
  &.cm-disabled {
    background-color: rgba($black, .05);
    color: rgba($black, .5);
  }
}

textarea {
  resize: none;
}

.cm-mat-input,
.cm-mat-textarea {
  @include border(none);
  @include borderBottom(1px solid $nobel2);
  @include padding(0);
  @include paddingBottom(5px);
  font-size: 14px;
  line-height: 19px;
  color: $black;

  &:focus {
    border-color: $black;
  }

  &.cm-error, &.ng-invalid.ng-touched, &.ng-invalid.ng-dirty {
    border-color: $red-orange;
    color: $red-orange;
  }

  &:disabled {
    pointer-events: none;
    border-color: $seashell;
    color: $wild-sand;
    background-color: transparent;

    &::placeholder {
      opacity: 1;
      color: $seashell;
    }
  }

  // placeholder
  &::placeholder {
    opacity: 1;
    color: $raven;
  }
}

.cm-button {
  @include flex(center, center);
  @include clickable();
  @include padding(0 22px);
  height: 32px;
  border-radius: 5px;
  font-size: 15px;
  font-weight: 500;
  letter-spacing: 1.4px;
  text-transform: uppercase;

  &:active {
    opacity: 0.8;
  }

  &:disabled {
    pointer-events: none;
    background-color: $provincial-pink;
  }

  &.primary {
    background-color: $tahiti-gold;
    color: $white;
    &:disabled {
      background-color: $provincial-pink;
    }
  }

  &.secondary {
    background-color: $whisper;
    color: $black;
    &:disabled {
      opacity: 0.5;
    }
  }
}

.cm-button-outline {
  @include border(1px solid $dim-grey);
  @include flex(center, center);
  @include padding(0 22px);
  border-radius: 5px;
  height: 32px;
  cursor: pointer;

  font-size: 14px;
  line-height: 14px;
  color: $tahiti-gold;
  text-transform: uppercase;

  &:active {
    opacity: 0.8;
  }

  &:disabled {
    pointer-events: none;
    color: $provincial-pink;
  }
}

// icon class
.cm-icon {
  @include flex(center, center);
  @include box(24px);

  svg {
    display: block;
  }

  &.cm-clickable {
    @include clickable(true);
  }
}

// filter card
.cm-filter-card {
  @include border(1px solid $whisper2);
  border-radius: 4.5px;
  box-shadow: 0 5px 10px rgba($black, .16);
  background-color: $white;
}

// ball icon
.cm-ball-icon {
  @include ball(30px);
  @include flex(center, center);
}

// icon button
.cm-icon-button {
  @include flex(center, null, null, nowrap);
  @include clickable(true);
  font-size: 14px;
  font-weight: 400;
  color: $suva-grey;
  max-width: 180px;
  text-align: left;
  word-break: break-word;

  // icon
  .cm-icon, .cm-ball-icon {
    margin-right: 17px;
  }
}

// oblique description
i.cm-oblique-description {
  font-size: 12px;
  line-height: 14px;
  color: $boulder;
}

a.cm-link {
  @include clickable(true);
  color: $tahiti-gold;
}

// popper.js related styles setting

#popper-tooltip[data-show] {
  display: block;
}

#popper-tooltip[data-popper-placement^='top'] > #popper-arrow {
  bottom: -4px;
}

#popper-tooltip[data-popper-placement^='bottom'] > #popper-arrow {
  top: -4px;
}

#popper-tooltip[data-popper-placement^='left'] > #popper-arrow {
  right: -4px;
}
#popper-tooltip[data-popper-placement^='left'] > #popper-arrow::before {
  right: -2px;
  border-left: 0;
  border-bottom: 0;
}

#popper-tooltip[data-popper-placement^='right'] > #popper-arrow {
  left: -4px;
}

#popper-tooltip {
  background: white;
  // color: white;
  font-weight: bold;
  padding: 4px 8px;
  font-size: 13px;
  border: 1px solid;
  border-radius: 4px;
  display: none;
}

#popper-arrow,
#popper-arrow::before {
    position: absolute;
    width: 10px;
    height: 10px;
    z-index: -1;
}

#popper-arrow::before{
    content: '';
    transform: rotate(45deg);
    // background: #333;
    background: white;
    border: 1px solid;
}

